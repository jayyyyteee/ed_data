services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  init-airflow:
    image: apache/airflow:2.7.1
    depends_on:
      - postgres
    networks:
      - default
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    command: >
      bash -c "airflow db init &&
            airflow db upgrade &&
            airflow db migrate &&
            airflow users create --username airflow --password password --firstname John --lastname Doe --role Admin --email admin@example.com"



  airflow-webserver:
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    build: .
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__WEBSERVER__DEFAULT_USER: ${AIRFLOW__WEBSERVER__DEFAULT_USER}
      AIRFLOW__WEBSERVER__DEFAULT_PASSWORD: ${AIRFLOW__WEBSERVER__DEFAULT_PASSWORD}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      DBT_PROFILES_DIR: ${DBT_PROFILES_DIR}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "8080:8080"
    volumes:
      - /home/jtsarmento/.dbt:/opt/airflow/.dbt
      - ./dags:/opt/airflow/dags
      - ./dags/scripts:/opt/airflow/scripts
      - ./dbt_project:/opt/airflow/dbt_project
    command: webserver

  airflow-scheduler:
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    build: .
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      DBT_PROFILES_DIR: ${DBT_PROFILES_DIR}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - /home/jtsarmento/.dbt:/opt/airflow/.dbt
      - ./dags:/opt/airflow/dags
      - ./dags/scripts:/opt/airflow/scripts
      - ./dbt_project:/opt/airflow/dbt_project
    command: scheduler

volumes:
  postgres_data:
  airflow_logs:
